<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function ($scope) {
	var c = this;

}
]]></client_script>
        <controller_as>c</controller_as>
        <css>a {&#13;
  text-decoration: none;&#13;
}&#13;
&#13;
a:hover {&#13;
  border-color: $godaddyBlue !important;&#13;
  color: $godaddyBlue !important;&#13;
  text-decoration: none;&#13;
}&#13;
&#13;
a:active {&#13;
  border-color: $godaddyBlue !important;&#13;
  text-decoration: none;&#13;
}&#13;
&#13;
&#13;
&#13;
&#13;
@font-face {&#13;
  font-family: 'Boing';&#13;
  src: url('//img1.wsimg-com.ide/ux/fonts/1.3/eot/Boing-Bold.eot?#iefix') format('embedded-opentype'),&#13;
    url('//img1.wsimg-com.ide/ux/fonts/1.3/woff2/Boing-Bold.woff2') format('woff2'),&#13;
    url('//img1.wsimg-com.ide/ux/fonts/1.3/woff/Boing-Bold.woff') format('woff'),&#13;
    url('//img1.wsimg-com.ide/ux/fonts/1.3/ttf/Boing-Bold.ttf') format('truetype');&#13;
  font-weight: 400 !important;&#13;
  font-style: normal;&#13;
}&#13;
&#13;
&#13;
.box-container {&#13;
  background-color: #FFF /*rgb(244, 244, 244);*/&#13;
    padding: 0em;&#13;
  text-align: center;&#13;
  height: 100%;&#13;
}&#13;
&#13;
.box {&#13;
&#13;
  width: 230px;&#13;
  height: 230px; &#13;
&#13;
}&#13;
&#13;
&#13;
body {&#13;
  /*&#13;
  color: #2B2B2B;&#13;
  font: 20px Boing-Bold, Arial, sans-seriff;&#13;
  padding-top: 150px;&#13;
  background-color: #F3F3F3 !important;&#13;
  */&#13;
  color: #5e5e5e;&#13;
  font: 13px "Helvetica Neue", Helvetica, Arial, "Lucida Grande", sans-serif;&#13;
  padding: 0;&#13;
  margin: 0;&#13;
}&#13;
&#13;
nav {&#13;
  font: 25px Boing-Bold, Arial, sans-serif;&#13;
}&#13;
&#13;
.jumbotron {&#13;
  background-color: $godaddyBlue !important;&#13;
  color: $godaddyBlue !important;&#13;
  padding: 0 10% 0 10%;&#13;
}&#13;
&#13;
.jumbotron a, .jumbotron a:hover {&#13;
  color: white;&#13;
  text-decoration: none;&#13;
}&#13;
&#13;
.navbar {&#13;
  background-color: #2B2B2B;&#13;
}&#13;
&#13;
.jumbotron img {&#13;
  max-width: 100px;&#13;
}&#13;
&#13;
.breadCrumb {&#13;
  color: #2B2B2B;&#13;
}&#13;
&#13;
.ui-notification {&#13;
  width: 400px;&#13;
}&#13;
&#13;
.ui-notification.clickable:hover {&#13;
  opacity: 1.0;&#13;
}&#13;
&#13;
.ui-notification a:hover {&#13;
  color: $godaddyBlue !important;&#13;
}&#13;
&#13;
.ui-notification img {&#13;
  max-width: 100px;&#13;
}&#13;
&#13;
hr {&#13;
  border: none;&#13;
  height: 2px;&#13;
&#13;
}&#13;
&#13;
a {&#13;
  text-decoration: none;&#13;
}&#13;
&#13;
a:hover {&#13;
  color: $godaddyBlue !important;&#13;
  text-decoration: none;&#13;
}&#13;
&#13;
h2 {&#13;
  color: $godaddyBlue !important;&#13;
}&#13;
&#13;
&#13;
.banner{&#13;
  background-color: #111116; &#13;
  color: #ffffff; &#13;
  border: 0px; &#13;
  margin-bottom: 0px;&#13;
  padding: 50px 40px;&#13;
  margin: 0;&#13;
}&#13;
&#13;
.banner-title{&#13;
  font-size: 36pt; &#13;
  font-family: 'arial black', arial, helvetica, sans-serif; &#13;
  font-weight: 900; &#13;
  color: #ffffff; &#13;
  line-height: 1;&#13;
  padding-bottom: 30px;&#13;
}&#13;
&#13;
.banner-caption{&#13;
  font-family: arial, &#13;
    helvetica, &#13;
    sans-serif; &#13;
  font-size: 14px; &#13;
  line-height: 1.4;&#13;
}&#13;
&#13;
&#13;
&#13;
/*medium screen*/&#13;
@media (max-width: 991px){&#13;
  .tile{&#13;
    width: 100%;&#13;
    border-bottom: 1px solid #e8e8e8;&#13;
    padding: 30px 10px 10px 10px;    &#13;
  }&#13;
&#13;
  .tile-link{&#13;
    height: 100%;&#13;
    width: 100%;&#13;
    cursor: hand;&#13;
  }&#13;
&#13;
  .tile-button{&#13;
    font-size: 12px;&#13;
    float: right;&#13;
    color: black;&#13;
  }&#13;
&#13;
  .tile-title{&#13;
    font-size: 20px; &#13;
    padding-bottom: 5px;&#13;
  }&#13;
&#13;
  .tile-image{&#13;
    max-width: 130px !important;&#13;
  }&#13;
&#13;
  .tile-caption{&#13;
    font-size: 16px; &#13;
    padding-bottom: 15px;&#13;
  }&#13;
&#13;
  .tile-chevron{&#13;
    float: right;&#13;
    right: 20px;&#13;
    color: black;&#13;
    font-size: 18px;&#13;
  }&#13;
}&#13;
&#13;
/*small screen*/&#13;
@media (max-width: 767px){&#13;
&#13;
  .tile{&#13;
    padding: 30px 10px 10px 10px;    &#13;
  }&#13;
&#13;
  .tile-chevron{&#13;
    right: 20px;&#13;
    font-size: 18px;&#13;
  }&#13;
&#13;
  .row {&#13;
    margin-left: -15px;&#13;
  }&#13;
}&#13;
&#13;
/*x-small screen*/&#13;
@media (max-width: 543px){&#13;
  .tile{     &#13;
    padding: 10px 0px;    &#13;
  }&#13;
&#13;
  .tile-title{&#13;
    font-size: 18px; &#13;
    padding-bottom: 5px;&#13;
  }&#13;
&#13;
  .tile-image{&#13;
    max-width: 90px !important;&#13;
  }&#13;
&#13;
  .tile-caption{&#13;
    font-size: 14px; &#13;
    padding-bottom: 15px;&#13;
  }&#13;
&#13;
  .tile-chevron{&#13;
    right: 5px;&#13;
    font-size: 18px;&#13;
  }&#13;
&#13;
  .row {&#13;
    margin-left: -20px;&#13;
  }&#13;
}&#13;
&#13;
&#13;
/*large screen*/&#13;
@media (min-width: 992px){&#13;
  .tile{&#13;
    width: 100%; &#13;
    padding: 20px 50px 20px 50px; &#13;
    border-right: 1px solid #e8e8e8;&#13;
    margin-bottom: 50px;&#13;
  }&#13;
&#13;
  .tile-button{&#13;
    font-size: 15px;&#13;
    color: black;&#13;
  }&#13;
&#13;
  .tile-title{&#13;
    font-size: 28px; &#13;
    padding-bottom: 25px;&#13;
    /*height: 120px;*/&#13;
  }&#13;
&#13;
  .tile-image{&#13;
    width: 130px !important; &#13;
    height: 100px !important; &#13;
    margin: 30px 0px 10px 0px; &#13;
    max-width: 130px !important;&#13;
  }&#13;
&#13;
  .tile-caption{&#13;
    font-size: 16px; &#13;
    padding-bottom: 25px;&#13;
  }&#13;
}&#13;
&#13;
a.tile-link:hover .tile-title {&#13;
  color: #02C54C;&#13;
  text-decoration: none;    &#13;
}&#13;
&#13;
.tile{&#13;
  background-color: #ffffff; &#13;
  color: #000000; &#13;
}&#13;
&#13;
.tile-button{&#13;
  background-color: black; &#13;
  color: #ffffff; &#13;
  padding: 10px 20px; &#13;
  font-family: 'arial black', arial, helvetica, sans-serif; &#13;
  border-radius: 3px;&#13;
}&#13;
&#13;
.tile-button{&#13;
  text-decoration: $godaddyBlue !important;        &#13;
}&#13;
&#13;
.tile-button:hover{&#13;
  text-decoration: none !important;&#13;
  color: #ffffff !important;&#13;
  background: $godaddyBlue !important;&#13;
}&#13;
&#13;
.tile-title{&#13;
  color: #000000; &#13;
  font-family: 'arial black', arial, helvetica, sans-serif; &#13;
  line-height: 1;&#13;
}&#13;
&#13;
.tile-caption{&#13;
  color: #000000; &#13;
  font-family: Impact, helvetica, sans-serif; &#13;
  line-height: 1;&#13;
}&#13;
&#13;
.green{&#13;
  color: $godaddyBlue !important; &#13;
}&#13;
&#13;
&#13;
a:focus, a:hover {&#13;
  color: $godaddyBlue !important;&#13;
  text-decoration: none !important;&#13;
}&#13;
&#13;
.img-responsive{&#13;
  max-width: 140px;&#13;
}&#13;
&#13;
&#13;
.box-link,&#13;
.box-link:hover,&#13;
.box-link:visited{&#13;
  text-decoration: none;&#13;
  color: black !important;&#13;
}&#13;
&#13;
&#13;
/*&#13;
&#13;
hr { border: none;height: 2px;background-color: #eff;}&#13;
img{ width:0.85in ;height:0.85in ;}&#13;
a {text-decoration: none; }&#13;
a:hover {border-color: $godaddyBlue !important;color: $godaddyBlue !important; text-decoration: none;}&#13;
div:hover{border-color: $godaddyBlue !important; text-decoration: none;}&#13;
div:active{border-color: $godaddyBlue !important; text-decoration: none;}&#13;
&#13;
.itemDescription{font-family: $mediumFont;color: #000000 !important;font-size:$base-font-size*1.2}&#13;
.itemTitle{font-family: $boldFont;font-size: 2.0vf;}&#13;
.column-left {float: left; width: 25%;padding:none;}&#13;
.column-right {float: left;width: 75%;}&#13;
.row-categories { height: 132px}&#13;
.row-categories:after {content: "";display: table;clear: both;}&#13;
.margins { margin-left: 3% !important;margin-right: 2% !important;&#13;
}&#13;
.cta-wrapper{ width: 30% !important;height: 150px;&#13;
border: 1px solid #d2d2d2;&#13;
box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);&#13;
border-radius: 2px;&#13;
}*/&#13;
/*&#13;
@media( min-width:768px ){&#13;
.margins {padding-left: 75px !important;padding-right: 75px !important; }&#13;
.cta-wrapper{ width: 490px;height: 150px;padding-left:40px;padding-right:0px;}&#13;
}&#13;
@media(min-width:1024px ){&#13;
.margins {margin-left: 60px !important;margin-right: 0px !important;padding-left: 0px !important;padding-right: 10px !important; }&#13;
.cta-wrapper{ width: 550px;height: 150px;padding-left:0px;padding-right:0px;  }&#13;
}&#13;
@media( min-width: 1366px ){&#13;
.margins {margin-left: 95px !important;margin-right: 0px !important;padding-left: 0px !important;padding-right: 10px !important; }&#13;
.cta-wrapper{ width: 550px;height: 150px;padding-left:0px;padding-right:0px;  }&#13;
}&#13;
@media( min-width: 1920px ){&#13;
.margins {margin-left: 95px !important;margin-right: 0px !important;padding-left: 40px !important;padding-right: 0px !important; }&#13;
.cta-wrapper{ width: 550px;height: 150px;padding-left:0px;padding-right:0px; }&#13;
}&#13;
@media( min-width: 2560px ){&#13;
.margins {margin-left: 95px !important;margin-right: 0px !important;padding-left: 85px !important;padding-right: 0px !important; }&#13;
.cta-wrapper{ width: 550px;height: 150px;padding-left:0px;padding-right:0px;}&#13;
}*/&#13;
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description>GDEP KB Content</description>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>gdep_kb_content</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>GDEP Kb Content</name>
        <option_schema>[{"name":"show_star_rating","default_value":"Use system properties","section":"Presentation","label":"Show star rating","type":"choice","choices":[{"label":"Yes","value":"Yes"},{"label":"No","value":"No"},{"label":"Use system properties","value":"Use system properties"}]},{"hint":"Number of articles to display per page","name":"limit_article","section":"other","default_value":"10","label":"Number of articles to display per page","type":"integer"}]</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {

    //Get Knowledge Base Id. If knowledge base is not selected, get knowledge bases associated with portal.
    data.kb = "";
    data.kb_id = $sp.getParameter("kb_id");
    data.kb_category = $sp.getParameter("kb_category");
    data.show = false;
    if (data.kb_id) {
        var kbArr = [];
        var kbGR = new GlideRecord("kb_knowledge_base");
        kbGR.addQuery("sys_id", "IN", data.kb_id);
        kbGR.query();
        while (kbGR.next()) {
            if (kbGR.canRead())
                kbArr.push(kbGR.getUniqueValue());
        }
        data.kb = String(kbArr);
    } else
        data.kb = String($sp.getKnowledgeBases());

    //To support Show more functionality
    var loadCategories = options.number_of_categories_to_load || 15;
    data.showMoreMsg = gs.getMessage("Show More");
    data.pleaseWait = gs.getMessage("Please wait... fetching categories");

    var maxArticleLimitForCounts = parseInt(options.max_article_limit_for_counts) || 500;
    var articles = new GlideRecord("kb_knowledge");
    articles.addQuery("kb_knowledge_base", "IN", data.kb);
    articles.addQuery("workflow_state", "published");
    articles.addQuery("valid_to", ">=", new GlideDate().getValue());
    articles.addActiveQuery();
    articles.setLimit(maxArticleLimitForCounts);
    articles.query();

    var kbCount = articles.getRowCount();
    var categoryId = $sp.getParameter('kb_category');
    var msg = data.messages = {};
    msg.expanded = gs.getMessage("Expanded");
    msg.collapsed = gs.getMessage("Collapsed");

    data.category = {};
    data.categories = [];

    data.arts = {};

    //To support Show more functionality
    if (input && input.getMore)
        loadCategories = loadCategories + parseInt(input.categoriesCount);

    var categoriesCount = 0;

    //
    // Get sub-categories in kb_category
    var cats = new GlideRecord("kb_category");
    cats.addActiveQuery();
    cats.addQuery("parent_id", data.kb_category);
    cats.addOrCondition("sys_id", data.kb_category);
    cats.orderBy('label');
    cats.query();

    while (cats.next()) {
        var categoryDetails = getCategory(cats, 0);

        //Only add categories that contain articles

        //gs.info("CAT count for user " + gs.getUserName() + " is as " + categoryDetails.count);
        if (categoryDetails.count > 0) {
            data.categories.push(categoryDetails);
        }


        //To support Show more functionality
        if (categoryDetails.count != 0)
            categoriesCount++;
        if (categoriesCount >= loadCategories)
            break;
    }

    data.showMore = cats.hasNext();
    data.categoriesCount = categoriesCount;
    data.loadAllMsg = gs.getMessage("Showing {0} categories", [categoriesCount + ""]);
    data.categoryId = categoryId;

    options.check_access_per_category = parseInt(options.check_access_per_category);

    //gs.info("CA count is  " + data.categories.length);
    if (data.categories.length == 0) {
        data.showArticleList = true;
        var ops = {
            limit_article: options.limit_article
        }
        data.articleListWidget = $sp.getWidget('gdep_kb_article_list', ops);
    }


    function getCategory(cats, level) {
        var categoryDetails = {};
        var articleCount = 0; // changed this from -1
        var arts = [];
        var allUserCriteria = SNC.UserCriteriaLoader.getAllUserCriteria();
        // checks to see if the user has access to the first 250 articles under this category.  Does not
        // retrieve any summary data (reusing this to check access)
        //arts = $sp.getKBCategoryArticleSummaries(cats.getUniqueValue(), 250, 0);
        var ktCount = 0;
        var kt = new GlideRecord('kb_knowledge');
        kt.addQuery('kb_category', cats.getUniqueValue());
        kt.addQuery('workflow_state', "published");
        kt.query();
        while (kt.next()) {



            var article = {};
            article.short_description = kt.short_description.toString();
            article.title = kt.short_description.toString();
            article.number = kt.number.toString();
            article.sys_view_count = kt.sys_view_count.toString();
            article.author = kt.author.getDisplayValue();
            article.rating = kt.rating.toString();
            article.sys_updated_on = kt.sys_updated_on.toString();
            article.published = kt.published.toString();
            article.type = "kb";
            article.text = "";
            article.text = $sp.stripHTML(kt.text);
            article.text = article.text.substring(0, 200);


            var read = kt.can_read_user_criteria.getValue('sys_id');

            if (read) {
                var res_list = read;
                var res_array = res_list.split(",");

                // if we found that the user has access per a user criteria we 
                // can move on so we don't add the article multiple times

                var verifiedAccess = false;
                for (var j = 0; j < res_array.length; j++) {
					if(verifiedAccess) continue;
                    for (i = 0; i < allUserCriteria.length; i++) {

						if(verifiedAccess) continue;
                        if (allUserCriteria[i].toString() == res_array[j].toString()) {

                            arts.push(article);
                            ktCount++;
							verifiedAccess = true; // stop checking


                        }


                    }



                }
            } else {


                arts.push(article);
                ktCount++;


            }






        }


        //gs.info("KT Count for user " + gs.getUserName() + " is " + ktCount);
        articleCount = arts.length;
        if (arts.length > 0)
            data.show = true;
        else
            articleCount = 0;

        //Categories json
        categoryDetails.label = cats.getDisplayValue("label");
        categoryDetails.image = cats.getDisplayValue("u_image");
        categoryDetails.short_description = cats.getValue('u_description');
        categoryDetails.value = cats.getUniqueValue();
        categoryDetails.count = articleCount;
        categoryDetails.showChildren = (cats.sys_id == categoryId);
        categoryDetails.level = level;

        //GDEP Category Button Mapping
        categoryDetails.title = categoryDetails.label;
        if (categoryDetails.value == "6a0ba34bdbbf9818fe6ec170ba96192e") {
            categoryDetails.url = "?id=career_leveling_guides&kb_category=6a0ba34bdbbf9818fe6ec170ba96192e";
        }

        // GDEP Category Pay Compensation Mapping
        else if (categoryDetails.value == "bb7e605fdbb81050daeb9ed6db96196c") {

            categoryDetails.url = "?id=gdep_pay_compensation&kb_category=bb7e605fdbb81050daeb9ed6db96196c";
            //gs.info("CAT URL " + categoryDetails.url);
        } else {
            categoryDetails.url = "?id=" + $sp.getParameter('id') + '&kb_category=' + categoryDetails.value;
        }

        if (data.kb_id) {
            categoryDetails += '&kb_id=' + data.kb_id;
        }

        var subcategories = new GlideRecord("kb_category");
        subcategories = $sp.getSubCategories(cats.getUniqueValue());
        categoryDetails.subcategories = [];
        while (subcategories.next()) {

            // Returns true if the user can read the specified GlideRecord.
            // If the record type is kb_knowledge, sc_cat_item, or sc_category, the method checks if the user can view the item.
            if ($sp.canReadRecord(subcategories)) {

                //Check visibility: Determines if the Access Control Rules, which include the user's roles, permit reading records in this table.
                if (subcategories.canRead()) {
                    var category = getCategory(subcategories, level + 1);
                    if (category.count != 0) {
                        categoryDetails.subcategories.push(category);
                        categoryDetails.count += category.count;
                    }
                    categoryDetails.showChildren = categoryDetails.showChildren || category.showChildren;
                }
            }
        }
        return categoryDetails;
    }
})()]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>choskins</sys_created_by>
        <sys_created_on>2020-04-22 01:08:53</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>05a3a8c2db5c14d8bb5a4a2813961900</sys_id>
        <sys_mod_count>693</sys_mod_count>
        <sys_name>GDEP Kb Content</sys_name>
        <sys_package display_value="GDEP" source="470c1443db2f0858eeb32ad94b9619de">470c1443db2f0858eeb32ad94b9619de</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="GDEP">470c1443db2f0858eeb32ad94b9619de</sys_scope>
        <sys_update_name>sp_widget_05a3a8c2db5c14d8bb5a4a2813961900</sys_update_name>
        <sys_updated_by>snamjoshi</sys_updated_by>
        <sys_updated_on>2021-09-27 21:33:27</sys_updated_on>
        <template><![CDATA[<div>
 <!-- <div class="col-xs-3 m-b-sm align-middle" ng-repeat="category in data.categories track by category.value">
    <a ng-href="{{category.url}}"><div class="categoryBtnArea">
      <div>${{{::category.label}}}</div>
      </div></a>
  </div>
-->
<div ng-if="data.categories.length>0" class="box-container">
  <hr>
    <a ng-repeat="cat in ::data.categories" class="box-link" href="{{::cat.url}}">
       <div class="box">
           <img class="img-circle"  ng-src="{{::cat.image}}">
           <div class="title">{{::cat.title}}</div>
           <div class="description">{{::cat.short_description}}</div>
       </div>
    </a>    
</div>

</div>



<div ng-if="c.data.showArticleList">
  <sp-widget widget="c.data.articleListWidget" />
</div>
<!--<pre>{{c.data.arts | json}}</pre>-->
<!--<pre>{{c.data.categories | json}}</pre>-->
]]></template>
    </sp_widget>
</record_update>
