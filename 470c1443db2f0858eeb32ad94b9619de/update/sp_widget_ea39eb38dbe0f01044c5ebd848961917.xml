<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>standard</category>
        <client_script><![CDATA[function employeeDocumentsListController($scope, spUtil, $location, $http, spAriaFocusManager, snAttachmentHandler, $window) {
	var c = this;
	var MOBILE_DEVICE_SCREEN_WIDTH = 1024;
	$scope.mobileDevice = c.data.mobileDevice || ($window.innerWidth <= MOBILE_DEVICE_SCREEN_WIDTH);
	
	//view OR download employee document
	$scope.$on('data_table.click', function(e, parms) {
		
		var employeeDocumentID = parms.sys_id;
		var win = ($scope.mobileDevice) ? $window.open() : $window;
		
		$http.get('/api/now/table/sys_attachment?sysparm_query=table_sys_id=' + employeeDocumentID + '&sysparm_limit=1').then(function(response) {
			
			if (response.data.result.length > 0) {	
				var empDocument = response.data.result[0];
				var attachmentID = empDocument.sys_id;
				var docFileType = empDocument.content_type;
				var isEncrypted = empDocument.encryption_context;
				var link = '';
				
				//view document in doc viewer
				if (docFileType == 'application/pdf' && !isEncrypted && c.data.canViewDocuments && !$scope.mobileDevice) {
					
					link = "$viewer.do?sysparm_stack=no&sysparm_sys_id=" + attachmentID;
					$window.open(link, '_blank', 'width=' + $window.innerWidth + ',height=' + $window.innerHeight);
					
					//create view document audit
					createViewDocumentAudit('document_viewed', employeeDocumentID);
				}
				//downlaod document
				else {
					link = snAttachmentHandler.getViewUrl(attachmentID);
					win.location = link;
					
					//create download document audit
					createViewDocumentAudit('document_downloaded', employeeDocumentID);
				}
			}
		});
	});
	
	//create employee document audit on server-side
	function createViewDocumentAudit(action, documentID){

		c.server.get({
			action: 'createDocumentAudit',
			audit: action,
			document: documentID
		});
	}
	
	var interval = $window.setInterval(override, 1000);
	
	function override() {
		// stop interval if employee document list is not shown
		if (!c.data.displayWidget) {
			clearInterval(interval);
			return;
		}
		
		var el = $("#document_list .breadcrumbs span a");
		if (el) {
			el.unbind("click");
			el.bind("click", function() {
				$scope.$broadcast('data_table.setFilter', $scope.data.filter);
			});
			clearInterval(interval);
		}
		var parentEle = $("#document_list .input-group");
		document.getElementsByName('datatable-search')[0].placeholder='${Find documents}';
		
		el = "<i class='fa fa-file-text'></i>";
		parentEle = $("#document_list .dropdown");
		if (parentEle)
			parentEle.append(el);
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>#document_list {&#13;
  #optionsMenu {&#13;
    display: none;&#13;
  }&#13;
&#13;
  .fa-file-text {&#13;
    padding-left: 7px;&#13;
    font-size: initial;;&#13;
    color: $color-lightest;&#13;
  }&#13;
&#13;
  .panel-heading &gt; .panel-title, .dropdown-toggle {&#13;
    color: $color-lightest;&#13;
  }&#13;
&#13;
  .input-group-btn {&#13;
    vertical-align: top;&#13;
  }&#13;
&#13;
  button[name='search'] {&#13;
    margin-left: -1px;&#13;
    border-radius: 0px 4px 4px 0px;&#13;
  }&#13;
&#13;
  .pull-right.ng-scope {&#13;
    height: 34px;&#13;
  }&#13;
&#13;
  .panel-title.ng-binding, .dropdown.m-r-xs {&#13;
    vertical-align: -9px;&#13;
  }&#13;
&#13;
  .breadcrumbs {&#13;
    padding: 5px 0 5px;&#13;
    .icon-filter, span:nth-child(3), span:nth-child(4), span:nth-child(5) {&#13;
      display: none;&#13;
    }&#13;
  }&#13;
&#13;
  td.selected {&#13;
    background-color: inherit;&#13;
    color: inherit;&#13;
  }&#13;
&#13;
  td {&#13;
    vertical-align: middle; &#13;
  }&#13;
&#13;
  .table.table-striped td {&#13;
    vertical-align: middle;&#13;
  }&#13;
&#13;
  .panel-heading {&#13;
    color: #fff;&#13;
    background-color: #1BDBDB !important;&#13;
    border-color: #1F8476;&#13;
  }&#13;
&#13;
  .panel-body .panel- {&#13;
    margin-bottom: 0; &#13;
  }&#13;
&#13;
  /* FA File Icons */&#13;
&#13;
  td[data-field='name'] {&#13;
    color:$primary;&#13;
  }&#13;
&#13;
  td[data-field='name']:before&#13;
  {&#13;
    content: "\f016";&#13;
    font-family: fontAwesome;&#13;
    font-size: 1.2em;&#13;
    color: $color-dark;&#13;
    display: inline-block;&#13;
    margin-right: 6px;&#13;
  }&#13;
&#13;
  td[data-field='name'][aria-label$=".png"]:before,&#13;
  td[data-field='name'][aria-label$=".jpg"]:before,&#13;
  td[data-field='name'][aria-label$=".gif"]:before, &#13;
  td[data-field='name'][aria-label$=".tif"]:before {&#13;
    content: "\f1c5";&#13;
  }&#13;
&#13;
  td[data-field='name'][aria-label$=".pdf"]:before {&#13;
    content: "\f1c1";&#13;
  }&#13;
&#13;
  td[data-field='name'][aria-label*=".doc"]:before,&#13;
  td[data-field='name'][aria-label*=".docx"]:before { &#13;
    content: "\f1c2";&#13;
  }&#13;
&#13;
  td[data-field='name'][aria-label*=".xls"]:before,&#13;
  td[data-field='name'][aria-label*=".xlsx"]:before { &#13;
    content: "\f1c3";&#13;
  }&#13;
&#13;
  td[data-field='name'][aria-label$=".zip"]:before {&#13;
    content: "\f1c6";&#13;
  }&#13;
&#13;
  td[data-field='name'][aria-label$=".txt"]:before {&#13;
    content: "\f0f6";&#13;
  }&#13;
&#13;
  td[data-field='name'][aria-label*=".ppt"]:before,&#13;
  td[data-field='name'][aria-label*=".pptx"]:before {&#13;
    content: "\f1c4";&#13;
  }&#13;
&#13;
  @media (max-width:990px) {&#13;
    td[data-field='name'] {&#13;
      text-overflow: ellipsis;&#13;
      overflow: hidden;&#13;
      white-space: nowrap;&#13;
      max-width: 245px;&#13;
    }&#13;
  }&#13;
&#13;
  @media (max-width:767px){&#13;
    .panel-heading {&#13;
      padding:10px 15px;&#13;
      .dropdown.m-r-xs {&#13;
        vertical-align:0px;&#13;
        .fa-file-text {&#13;
          padding-left:0;&#13;
        }&#13;
      }&#13;
      .panel-title.ng-binding {&#13;
        display:inline-block;&#13;
        vertical-align:0;&#13;
        padding-bottom:10px;&#13;
      }&#13;
    }&#13;
  }&#13;
}&#13;
&#13;
</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>gd-employee-docs-list</id>
        <internal>false</internal>
        <link><![CDATA[function link(scope, element, attrs, controller) {  }]]></link>
        <name>GD Employee Documents List</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	
	var userId = $sp.getParameter("sys_id") || gs.getUserID();

	if(input && input.action === 'createDocumentAudit' && input.document && input.audit)
		new sn_hr_ef.ef_Utils().createEmployeeDocumentAudit(input.audit, input.document, null, false, null, null, null);
	
	data.title = options.title || gs.getMessage('My Documents'); 
	data.table = 'sn_hr_ef_employee_document';
	data.filter = 'active=true^document_type.employee_access=true^u_grant_access=true^employee=' + userId + '^EQ';
	data.field_list = 'name,sys_created_on';
	data.o = 'name';
	data.d = 'asc';
	data.window_size = options.window_size || 5;
	data.mobileDevice = gs.isMobile();
	
	data.displayWidget = false;
	var pm = new GlidePluginManager();
	if (!pm.isActive('com.sn_employee_document_management'))
		return;
	
	data.canViewDocuments = new sn_hr_ef.ef_Utils().canViewDocuments();
	
	var agg = new GlideAggregate(data.table);
	agg.addEncodedQuery(data.filter);
	agg.addAggregate('COUNT');
	agg.query();
	agg.next();
	
	var recordCount = Number(agg.getAggregate('COUNT'));
		
	if (recordCount != 0 && gs.getUserID() == userId)
		data.displayWidget = true;
	else
		return;

	var widgetParams = {
		show_breadcrumbs : true,
		show_keywords : true,
		title: data.title,
		enable_filter : true,
		table : data.table,
		filter : data.filter,
		fields : data.field_list,
		o : data.o,
		d : data.d,
		window_size : data.window_size,
		hide_footer : data.window_size >= recordCount
	};
	
	data.dataTableWidget = $sp.getWidget('widget-data-table', widgetParams);
	
})();]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>snamjoshi</sys_created_by>
        <sys_created_on>2021-06-02 20:57:44</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>ea39eb38dbe0f01044c5ebd848961917</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>GD Employee Documents List</sys_name>
        <sys_package display_value="GDEP" source="470c1443db2f0858eeb32ad94b9619de">470c1443db2f0858eeb32ad94b9619de</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="GDEP">470c1443db2f0858eeb32ad94b9619de</sys_scope>
        <sys_update_name>sp_widget_ea39eb38dbe0f01044c5ebd848961917</sys_update_name>
        <sys_updated_by>snamjoshi</sys_updated_by>
        <sys_updated_on>2021-06-02 22:00:14</sys_updated_on>
        <template><![CDATA[<div id="document_list">
	<sp-widget ng-if="data.displayWidget" widget="data.dataTableWidget" />
</div>]]></template>
    </sp_widget>
</record_update>
