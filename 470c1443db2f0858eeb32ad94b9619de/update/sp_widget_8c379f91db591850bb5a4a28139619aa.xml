<?xml version="1.0" encoding="UTF-8"?><record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <category>custom</category>
        <client_script><![CDATA[function($scope) {
  /* widget controller */
  var c = this;
console.log("SLIDE NUMBER: " + c.data.slideNum);
	
	
	/*
	c.displayMainCarousel = true;
	if(c.options.carousel_type === 'lazy-loading' || c.options.carousel_type === 'slider-nav') {
		c.displayMainCarousel = false;
	}*/
	
	/*
	c.getHeader = function() {
		if(c.options.header) {
			return c.options.header;
		} else {
			return;
		}
	};
	
	c.getClass = function() {
		if(c.options.carousel_type === 'adaptive-height') {
			return;
		}
		else if(parseInt(c.options.slides_to_show) < 2) {
			return 'single-slide';
		}	
		else {
			return 'slide';
		}
	};
	*/
}
]]></client_script>
        <controller_as>c</controller_as>
        <css>h1 {  font-weight: bold; text-align: left; margin: 30px 0px;}

.single-slide {	height: 371px;}


.slick-slide { margin: 0px; padding: 0px; }
.slick-slide h3{ background: white; color: #3498db;font-size: $base-font-size*2;line-height: 100px;padding: 0%;position: relative;text-align: center;}
.slide {height: 175px;}

.slick-slide img {display: block;height: auto !important;width: 100%;}
.slick-center { transform: scale(1.08);}
.slick-dots{ display:none; }

.searchButton {
  margin: 200px auto;
  color:orange;
}


.button {
  background: #3498db;
  color: #fff;
  display: block;
  font-size: 16px;
  margin: 20px auto;
  padding: 20px;
  text-align: center;
  text-decoration: none;
  width: 48%;
}

div{padding:0px important!;margin:0px important!;}

/*body {
  overflow-x: hidden; /* Hide horizontal scrollbar */
}*/


li{ display:none; }
.border { 	border: 0px solid #FFF; }

.sp-tagline-color {   
   color: $sp-tagline-color; 
   z-index: 5;
}   

.wrapper-xl {
       padding: 0px !important;
       z-index: 5!important;
       position: absolute!important;
  		 width: 90%;
}

.wrapper-xl2 {
       padding-top: 150px;
       padding-left: 100px;
       padding-right: 0px;
       z-index: 5 !important;
       background: transparent !important; 
}

/* Center Mode Styles */
.center {
  transition: all 300ms ease;
}

/* Add and Remove Styles */
.buttons .button {
  background: #FFF;
  color: #3498db;
  float: left;
  margin: 5px 5px 30px 14px;
}

/* Filtering Styles */
.filter-div .button {
  background: #fff;
  color: #3498db;
  margin-bottom: 40px;
}

/* Remove Filter and Add/Remove buttons for mobile */
@media (max-width: 1024px) {
  .filter-div, .buttons {
  	display: none;
  }
}
ul.slick-dots{
 display:none; 
}

</css>
        <data_table>sp_instance_carousel</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>true</has_preview>
        <id>gdep_random_carousel</id>
        <internal>false</internal>
        <link><![CDATA[function(scope) {

	// this code isn't really needed but it gives errors so 
	// I didn't delete it.  We aren't really using this as
	// a carousel -- it's a random display of a photo.
	
	setTimeout(function() {
		
		var slidesToShow = parseInt(scope.options.slides_to_show);
		var isAutoplay = (scope.options.autoplay === 'true');
		var displayDots = (scope.options.display_dots === 'true');

		// Standard Carousel
		$('.standard').slick({
			infinite: true,
			dots: displayDots,
			autoplay: isAutoplay,
			autoplaySpeed: 5000,
			slidesToShow: slidesToShow,
			slidesToScroll: slidesToShow,
			responsive: [
				{
					breakpoint: 1024,
					settings: {
						slidesToShow: 1,
						slidesToScroll: 3,
						arrows: false
					}
				},
				{
					breakpoint: 600,
					settings: {
						slidesToShow: 2,
						slidesToScroll: 2,
						arrows: false
					}
				},
				{
					breakpoint: 480,
					settings: {
						slidesToShow: 1,
						slidesToScroll: 1,
						arrows: false
					}
				}
				
				//	You can unslick at a given breakpoint now by adding:
				//	settings: "unslick" 
				//	instead of a settings object
			
			]
		});
		
		
		// Variable Width
		$('.variable-width').slick({
			dots: displayDots,
			infinite: true,
			speed: 300,
			autoplay: isAutoplay,
			autoplaySpeed: 5000,
			slidesToShow: 1,
			centerMode: true,
			variableWidth: true
		});


		// Adaptive Height
		$('.adaptive-height').slick({
			dots: displayDots,
			infinite: true,
			speed: 300,
			autoplay: isAutoplay,
			autoplaySpeed: 5000,
			slidesToShow: slidesToShow,
			adaptiveHeight: true,
			responsive: [
				{
					breakpoint: 768,
					settings: {
						slidesToShow: 3,
						slidesToScroll: 3,
						arrows: false
					}
				},
				{
					breakpoint: 480,
					settings: {
						slidesToShow: 1,
						slidesToScroll: 1,
						arrows: false
					}
				}
				 
			//		You can unslick at a given breakpoint now by adding:
			//		settings: "unslick" 
			//		instead of a settings object
				
			]
		});


		// Center Mode
		$('.center-mode').slick({
			centerMode: true,
			centerPadding: '60px',
			autoplay: isAutoplay,
			autoplaySpeed: 5000,
			slidesToShow: slidesToShow,
			dots: displayDots,
			responsive: [
				{
					breakpoint: 768,
					settings: {
						arrows: false,
						centerMode: true,
						centerPadding: '40px',
						slidesToShow: 3
					}
				},
				{
					breakpoint: 480,
					settings: {
						arrows: false,
						centerMode: true,
						centerPadding: '40px',
						slidesToShow: 1
					}
				}
			]
		});


		// Lazy Loading
		
	//		To use lazy loading, set a data-lazy attribute
	//		on your img tags and leave off the src
	//		ex.) <img data-lazy="img/lazyimage1.png"/>
		
		$('.lazy-loading').slick({
			lazyLoad: 'ondemand',
			autoplay: isAutoplay,
			autoplaySpeed: 5000,
			slidesToShow: slidesToShow,
			slidesToScroll: 1,
			dots: displayDots,
			responsive: [
				{
					breakpoint: 1024,
					settings: {
						slidesToShow: 3,
						infinite: true,
						arrows: false
					}
				},
				{
					breakpoint: 600,
					settings: {
						slidesToShow: 2,
						arrows: false
					}
				},
				{
					breakpoint: 480,
					settings: {
						slidesToShow: 1,
						arrows: false
					}
				}
				 
		//			You can unslick at a given breakpoint now by adding:
		//			settings: "unslick" 
		//			instead of a settings object
				
			]
		});

		// Add and Remove**  Desktop Only
		$('.add-remove').slick({
			autoplay: isAutoplay,
			autoplaySpeed: 5000,
			slidesToShow: slidesToShow,
			slidesToScroll: 3,
			dots: displayDots,
			responsive: [
				{
					breakpoint: 1024,
					settings: {
						slidesToShow: 3,
						arrows: false
					}
				},
				{
					breakpoint: 600,
					settings: {
						slidesToShow: 2,
						arrows: false
					}
				},
				{
					breakpoint: 480,
					settings: {
						slidesToShow: 1,
						slidesToScroll: 1,
						arrows: false
					}
				}
			]
		});
		
		var slideIndex = scope.data.slides.length; // Initial carousel size
		
		$('.js-add-slide').on('click', function() {
			slideIndex++;
			$('.add-remove').slick('slickAdd','<div><h3>' + slideIndex + '</h3></div>');	
		});

		$('.js-remove-slide').on('click', function() {
			$('.add-remove').slick('slickRemove',slideIndex - 1);
			if (slideIndex !== 0){
				slideIndex--;
			}
		});


		// Filtering**  Desktop Only
		$('.filtering').slick({
			dots: displayDots,
			autoplay: isAutoplay,
			autoplaySpeed: 5000,
			slidesToShow: slidesToShow,
			slidesToScroll: slidesToShow,
			responsive: [
				{
					breakpoint: 1024,
					settings: {
						slidesToShow: 3,
						slidesToScroll: 3,
						infinite: true,
						arrows: false
					}
				},
				{
					breakpoint: 600,
					settings: {
						slidesToShow: 2,
						slidesToScroll: 2,
						arrows: false
					}
				},
				{
					breakpoint: 480,
					settings: {
						slidesToShow: 1,
						slidesToScroll: 1,
						arrows: false
					}
				}
			]
		});

		var filtered = false;
		
	//	 This filter displays odd slides 
		$('.js-filter').on('click', function() {
			if (filtered === false) {
				$('.filtering').slick('slickFilter',':even');
				$(this).text('Unfilter Slides');
				filtered = true;
			} else {
				$('.filtering').slick('slickUnfilter');
				$(this).text('Filter Slides');
				filtered = false;
			}
		});


		// Slider Syncing
		$('.slider-for').slick({
			slidesToShow: 1,
			slidesToScroll: 1,
			arrows: false,
			fade: true,
			autoplay: isAutoplay,
			autoplaySpeed: 5000,
			asNavFor: '.slider-nav'
		});
		
		$('.slider-nav').slick({
			slidesToShow: slidesToShow,
			slidesToScroll: 1,
			asNavFor: '.slider-for',
			dots: displayDots,
			centerMode: true,
			focusOnSelect: true,
			responsive: [
				{
					breakpoint: 1024,
					settings: {
						slidesToShow: 3,
						slidesToScroll: 3,
						infinite: true,
						arrows: false
					}
				},
				{
					breakpoint: 600,
					settings: {
						slidesToShow: 2,
						slidesToScroll: 2,
						arrows: false
					}
				},
				{
					breakpoint: 480,
					settings: {
						slidesToShow: 1,
						slidesToScroll: 1,
						arrows: false
					}
				}
				
				//	You can unslick at a given breakpoint now by adding:
				//	settings: "unslick" 
				//	instead of a settings object
			
			]
		});
	}, 1);
}
]]></link>
        <name>GDEP Random Carousel</name>
        <option_schema>[{"hint":"Select a header for your carousel","name":"header","section":"other","default_value":"","label":"Header","type":"string"},{"hint":"Select a font-color for your header ex) white or #FFF","name":"header_color","section":"other","default_value":"black","label":"Header Color","type":"string"},{"hint":"Select a pre-built carousel style or create your own!","name":"carousel_type","section":"other","default_value":"standard","label":"Carousel Type","type":"choice","choices":[{"label":"standard","value":"standard"},{"label":"variable-width","value":"variable-width"},{"label":"adaptive-height","value":"adaptive-height"},{"label":"center-mode","value":"center-mode"},{"label":"lazy-loading","value":"lazy-loading"},{"label":"add-remove","value":"add-remove"},{"label":"filtering","value":"filtering"},{"label":"slider-nav","value":"slider-nav"}]},{"hint":"Select how many slides you want to show at a time","name":"slides_to_show","section":"other","default_value":"1","label":"Slides to Show","type":"choice","choices":[{"label":"1","value":"1"},{"label":"2","value":"2"},{"label":"3","value":"3"},{"label":"4","value":"4"},{"label":"5","value":"5"},{"label":"6","value":"6"}]},{"hint":"Select this checkbox if you want your carousel to continuously scroll","name":"autoplay","section":"other","default_value":"","label":"Autoplay","type":"boolean"},{"hint":"Display navigation indicators on the bottom of the carousel","name":"display_dots","section":"other","label":"Display Dots","type":"boolean"},{"hint":"Display the border around each slide","name":"display_border","section":"search","default_value":"","label":"Display Border","type":"boolean"}]&#13;
&#13;
</option_schema>
        <public>false</public>
        <roles/>
        <script><![CDATA[(function() {
	data.slides = $sp.getRelatedList('sp_carousel_slide', 'carousel');
	var typeAheadSearchOpts = {active: true, size: 'lg', color: 'default'};   
  data.typeAheadSearch = $sp.getWidget('gdep-homepage-search', typeAheadSearchOpts); 
	
	
	data.slideNum =	Math.floor(Math.random()*data.slides.length);
	
	data.slide = data.slides[data.slideNum];
})();
]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>choskins</sys_created_by>
        <sys_created_on>2020-06-08 23:20:41</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>8c379f91db591850bb5a4a28139619aa</sys_id>
        <sys_mod_count>87</sys_mod_count>
        <sys_name>GDEP Random Carousel</sys_name>
        <sys_package display_value="GDEP" source="470c1443db2f0858eeb32ad94b9619de">470c1443db2f0858eeb32ad94b9619de</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="GDEP">470c1443db2f0858eeb32ad94b9619de</sys_scope>
        <sys_update_name>sp_widget_8c379f91db591850bb5a4a28139619aa</sys_update_name>
        <sys_updated_by>iremigio</sys_updated_by>
        <sys_updated_on>2020-07-21 21:09:36</sys_updated_on>
        <template><![CDATA[<!--Nested Search Widget-->
<div id="homepage-search" class="wrapper-xl col-xs-6">     
  <div class="wrapper-xl2 ">   
    <div class="fullsize">
      <sp-widget widget="data.typeAheadSearch" class="searchButton" />   
    </div>
  </div>   
</div> 

<!-- Main Carousel -->
<h1 style="color:{{::options.header_color}}">{{c.getHeader()}}</h1>
<div class="{{::options.carousel_type}} ">
  <img ng-src="{{c.data.slide.background}}" class="single-slide"/>
</div>  
]]></template>
    </sp_widget>
</record_update>
